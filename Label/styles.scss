@import '../css/settings';
@import '../css/mixins/index';

.label {
  @include typography(map-get($font-sizes, label-mobile), regular);

  background: map-get($colors, light-grey);
  border: ($grid * .2) solid map-get($colors, light-grey);
  border-radius: $border-radius;
  bottom: ($grid * .2);
  color: map-get($colors, black);
  display: inline-block;
  line-height: ($grid * 3.6);
  padding: 0 ($grid * 1.6);
  position: relative;

  @include respond-to-wide {
    @include typography(map-get($font-sizes, label-desktop), regular);
  }

  &.warning {
    background: map-get($colors, red);
    border-color: map-get($colors, red);
    color: map-get($colors, white);
  }

  &.notice {
    background: map-get($colors, orange);
    border-color: map-get($colors, orange);
    color: map-get($colors, white);
  }

  &.success {
    background: map-get($colors, green);
    border-color: map-get($colors, green);
    color: map-get($colors, white);
  }

  &.brown {
    background: map-get($colors, brown);
    border-color: map-get($colors, brown);
    color: map-get($colors, white);
  }

  &.purple {
    background: map-get($colors, purple);
    border-color: map-get($colors, purple);
    color: map-get($colors, white);
  }

  &.light-blue {
    background: map-get($colors, light-blue);
    border-color: map-get($colors, light-blue);
    color: map-get($colors, white);
  }

  &.ultramarine {
    background: map-get($colors, ultramarine);
    border-color: map-get($colors, ultramarine);
    color: map-get($colors, white);
  }

  &.yellow {
    background: map-get($colors, yellow);
    border-color: map-get($colors, yellow);
    color: map-get($colors, white);
  }

  &.grey {
    background: map-get($colors, grey-label);
    border-color: map-get($colors, grey-label);
    color: map-get($colors, white);
  }

  &.black {
    background: map-get($colors, black);
    border-color: map-get($colors, black);
    color: map-get($colors, white);
  }

  &.inverted {
    background: map-get($colors, white);
    border-color: map-get($colors, white);
    color: map-get($colors, klarna-blue);
  }

  &.outline {
    background: transparent;
    border-color: map-get($colors, grey-text);
    color: map-get($colors, grey-text);

    &.warning {
      border-color: map-get($colors, red);
      color:  map-get($colors, red);
    }

    &.notice {
      border-color: map-get($colors, orange);
      color:  map-get($colors, orange);
    }

    &.success {
      border-color: map-get($colors, green);
      color:  map-get($colors, green);
    }

    &.brown {
      border-color: map-get($colors, brown);
      color:  map-get($colors, brown);
    }

    &.purple {
      border-color: map-get($colors, purple);
      color:  map-get($colors, purple);
    }

    &.light-blue {
      border-color: map-get($colors, light-blue);
      color:  map-get($colors, light-blue);
    }

    &.ultramarine {
      border-color: map-get($colors, ultramarine);
      color:  map-get($colors, ultramarine);
    }

    &.yellow {
      border-color: map-get($colors, yellow);
      color:  map-get($colors, yellow);
    }

    &.grey {
      border-color: map-get($colors, grey-label);
      color:  map-get($colors, grey-label);
    }

    &.black {
      border-color: map-get($colors, black);
      color:  map-get($colors, black);
    }

    &.inverted {
      border-color: map-get($colors, white);
      color: map-get($colors, white);
    }
  }
}
